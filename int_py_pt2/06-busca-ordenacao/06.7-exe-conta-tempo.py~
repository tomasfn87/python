import ordenar
import aleatorio
import time

class ContaTempo:
    # Refatoração #1 {
    # +++++++++++ ++ |
    def comparar(self, funcao_algoritmo, lista, str_algorismo):
        t = time.time
        before = t()
        funcao_algoritmo(lista)
        after = t()
        print("\t" + str_algorismo, "Sort took", "{0:.5f}".format(after - before), "seconds.")
        # }

    def compara (self, n):
        C = ContaTempo()
        compare = C.comparar
        
        listaA = aleatorio.lista_aleatoria(n)
        listaB = aleatorio.lista_quase_ordenada(n)

        o = ordenar.Ordenar()

        # Refatoração #2 {
        # +++++++++++ ++ |
        print("Random list {")
        compare(o.selecao_direta, listaA[:], "Direct Selection")
        compare(o.bolha,          listaA[:], "Bubble")
        compare(o.bolha_curta,    listaA[:], "Short Bubble")
        compare(o.insertion,      listaA[:], "Insertion")
        print("}\n\nAlmost ordered list {")
        compare(o.selecao_direta, listaB[:], "Direct Selection")
        compare(o.bolha,          listaB[:], "Bubble")
        compare(o.bolha_curta,    listaB[:], "Short Bubble")
        compare(o.insertion,      listaB[:], "Insertion")
        print("}")
        # }

        # = ===== == ====== === ========== |
        # O tanto de código que economizei {
        """ print("Random list {")

        before = t()
        o.selecao_direta(lista1a)
        after = t()
        print("\tDirect Sort took", "{0:.5f}".format(after - before), "seconds.")

        before = t()
        o.bolha(lista2a)
        after = t()
        print("\tBubble Sort took", "{0:.5f}".format(after - before), "seconds.")

        before = t()
        o.bolha_curta(lista3a)
        after = t()
        print("\tShort Bubble Sort took", "{0:.5f}".format(after - before), "seconds.")

        before = t()
        o.insertion(lista4a)
        after = t()
        print("\tInsertion Sort took", "{0:.5f}".format(after - before), "seconds.")
        print("}")

        print("\nAlmost ordered list {")

        before = t()
        o.selecao_direta(lista1b)
        after = t()
        print("\tDirect Sort took", "{0:.5f}".format(after - before), "seconds.")

        before = t()
        o.bolha(lista2b)
        after = t()
        print("\tBubble Sort took", "{0:.5f}".format(after - before), "seconds.")

        before = t()
        o.bolha_curta(lista3b)
        after = t()
        print("\tShort Bubble Sort took", "{0:.5f}".format(after - before), "seconds.")
        
        before = t()
        o.insertion(lista4b)
        after = t()
        print("\tInsertion Sort took", "{0:.5f}".format(after - before), "seconds.")
        print("}") """
        # }

ct = ContaTempo()
comp = ct.compara
def comparar():
    while True:
        n = int(input("Insira o número de itens das listas a serem testadas (-1 para sair): "))
        if n == -1:
            return
        else:
            print()
            comp(n)
